{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","readme","setReadme","packageUrls","setPackageUrls","useEffect","fetch","then","response","text","content","catch","e","console","error","json","sort","a","b","split","pop","components","code","node","inline","className","children","props","match","exec","language","PreTag","String","replace","Container","remarkPlugins","gfm","map","packageUrl","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA0DeA,MApDf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEyBF,mBAAS,IAFlC,mBAENG,EAFM,KAEOC,EAFP,KAGbC,qBAAU,WACRC,MAAM,aACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAO,OAAIR,EAAUQ,MAC1BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,MAC5BN,MAAM,qFACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAG,GACJA,EAAQM,MAAK,SAACC,EAAGC,GACf,OAAID,EAAEE,MAAM,KAAKC,MAAQF,EAAEC,MAAM,KAAKC,OAC5B,EAENH,EAAEE,MAAM,KAAKC,MAAQF,EAAEC,MAAM,KAAKC,MAC7B,EAEF,KAEThB,EAAeM,MAEhBC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,QAC3B,IAEH,IAAMS,EAAa,CACjBC,KADiB,YACmC,EAA9CC,KAA+C,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,SAAaC,EAAQ,wDAC5CC,EAAQ,iBAAiBC,KAAKJ,GAAa,IACjD,OAAQD,GAAUI,EAChB,cAAC,IAAD,aAAmBE,SAAUF,EAAM,GAAIG,OAAO,MAAML,SAAUM,OAAON,GAAUO,QAAQ,MAAO,KAASN,IAEvG,kCAAMF,UAAWA,GAAeE,MAKtC,OACE,eAACO,EAAA,EAAD,WACE,cAAC,IAAD,CAAeb,WAAYA,EAAYc,cAAe,CAACC,KAAvD,SAA8DnC,IAC9D,6BAEIE,EAAYkC,KAAI,SAACC,GAAD,OACd,6BACE,mBAAGC,KAAMD,EAAT,SAAsBA,EAAWnB,MAAM,KAAKC,SADrCkB,YCpCNE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9c6ca74e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\n\nfunction App() {\n  const [readme, setReadme] = useState('');\n  const [packageUrls, setPackageUrls] = useState([]);\n  useEffect(() => {\n    fetch('readme.md')\n      .then(response => response.text())\n      .then(content => setReadme(content))\n      .catch(e => console.error(e));\n    fetch('https://raw.githubusercontent.com/mozilla-platform-ops/pypi/main/packageUrls.json')\n      .then(response => response.json())\n      .then(content => {\n        content.sort((a, b) => {\n          if (a.split('/').pop() < b.split('/').pop()) {\n            return -1;\n          }\n          if (a.split('/').pop() > b.split('/').pop()) {\n            return 1;\n          }\n          return 0;\n        });\n        setPackageUrls(content);\n      })\n      .catch(e => console.error(e));\n  }, []);\n\n  const components = {\n    code({node, inline, className, children, ...props}) {\n      const match = /language-(\\w+)/.exec(className || '')\n      return !inline && match ? (\n        <SyntaxHighlighter language={match[1]} PreTag=\"div\" children={String(children).replace(/\\n$/, '')} {...props} />\n      ) : (\n        <code className={className} {...props} />\n      )\n    }\n  }\n\n  return (\n    <Container>\n      <ReactMarkdown components={components} remarkPlugins={[gfm]}>{readme}</ReactMarkdown>\n      <ul>\n        {\n          packageUrls.map((packageUrl) => (\n            <li key={packageUrl}>\n              <a href={packageUrl}>{packageUrl.split('/').pop()}</a>\n            </li>\n          ))\n        }      \n      </ul>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}