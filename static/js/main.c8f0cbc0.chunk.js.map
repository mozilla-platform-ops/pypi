{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","readme","setReadme","packageUrls","setPackageUrls","useEffect","fetch","then","response","text","content","catch","e","console","error","json","sort","a","b","split","pop","Container","map","packageUrl","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LA6CeA,MAzCf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEyBF,mBAAS,IAFlC,mBAENG,EAFM,KAEOC,EAFP,KAyBb,OAtBAC,qBAAU,WACRC,MAAM,aACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAO,OAAIR,EAAUQ,MAC1BC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,MAC5BN,MAAM,qFACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAG,GACJA,EAAQM,MAAK,SAACC,EAAGC,GACf,OAAID,EAAEE,MAAM,KAAKC,MAAQF,EAAEC,MAAM,KAAKC,OAC5B,EAENH,EAAEE,MAAM,KAAKC,MAAQF,EAAEC,MAAM,KAAKC,MAC7B,EAEF,KAEThB,EAAeM,MAEhBC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,MAAMF,QAC3B,IAGD,eAACS,EAAA,EAAD,WACE,cAAC,IAAD,UAAgBpB,IAChB,6BAEIE,EAAYmB,KAAI,SAACC,GAAD,OACd,6BACE,mBAAGC,KAAMD,EAAT,SAAsBA,EAAWJ,MAAM,KAAKC,SADrCG,YCvBNE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c8f0cbc0.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport ReactMarkdown from 'react-markdown';\n\nfunction App() {\n  const [readme, setReadme] = useState('');\n  const [packageUrls, setPackageUrls] = useState([]);\n  useEffect(() => {\n    fetch('readme.md')\n      .then(response => response.text())\n      .then(content => setReadme(content))\n      .catch(e => console.error(e));\n    fetch('https://raw.githubusercontent.com/mozilla-platform-ops/pypi/main/packageUrls.json')\n      .then(response => response.json())\n      .then(content => {\n        content.sort((a, b) => {\n          if (a.split('/').pop() < b.split('/').pop()) {\n            return -1;\n          }\n          if (a.split('/').pop() > b.split('/').pop()) {\n            return 1;\n          }\n          return 0;\n        });\n        setPackageUrls(content);\n      })\n      .catch(e => console.error(e));\n  }, []);\n\n  return (\n    <Container>\n      <ReactMarkdown>{readme}</ReactMarkdown>\n      <ul>\n        {\n          packageUrls.map((packageUrl) => (\n            <li key={packageUrl}>\n              <a href={packageUrl}>{packageUrl.split('/').pop()}</a>\n            </li>\n          ))\n        }      \n      </ul>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}